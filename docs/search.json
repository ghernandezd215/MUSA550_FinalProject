[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "MUSA 550 Final Project Template",
    "section": "",
    "text": "Hello!\nWelcome to this page that was made using Quarto! I am excited to share with you my final project for my Geospatial Data Science in Python course.\nEarly into my Master’s in Urban Spatial Analytics program in the University of Pennsylvania’s School of Design, I was given the opportunity to intern with Nehemiah HDFC, an affordable housing development company based out of New York City. Nehemiah has 30+ years of experience transforming neighborhoods that were once blighted and undesirable, and in the process they have built extraordinary wealth for families that would otherwise be left out of the prosperity that can come with gentrification. Through Homeownership Nehemiah has been able to deeply impact the lives of individuals and their communities.\nThe purpose of my project was to take lists of addresses that contained each property that Nehemiah has developed and merge them with NYC’s cross-departmental database (MAPPLUTO)that included the polygons of the lots. In order to do this, each list had to be wrangled in a different way prior to merging with the MAPPLUTo. The project yielded a shapefile that contained all of the lot-level data, including the geometries, that NYC had to offer for each of the addresses. The final result is that Nehemiah, for the first time in its history, could visualize where their properties were on a map. The scale of their effort is remarkable and its success is worth sharing as a model for transformative change in marginalized communities.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "MUSA 550 Final Project Template",
    "section": "",
    "text": "Hello!\nWelcome to this page that was made using Quarto! I am excited to share with you my final project for my Geospatial Data Science in Python course.\nEarly into my Master’s in Urban Spatial Analytics program in the University of Pennsylvania’s School of Design, I was given the opportunity to intern with Nehemiah HDFC, an affordable housing development company based out of New York City. Nehemiah has 30+ years of experience transforming neighborhoods that were once blighted and undesirable, and in the process they have built extraordinary wealth for families that would otherwise be left out of the prosperity that can come with gentrification. Through Homeownership Nehemiah has been able to deeply impact the lives of individuals and their communities.\nThe purpose of my project was to take lists of addresses that contained each property that Nehemiah has developed and merge them with NYC’s cross-departmental database (MAPPLUTO)that included the polygons of the lots. In order to do this, each list had to be wrangled in a different way prior to merging with the MAPPLUTo. The project yielded a shapefile that contained all of the lot-level data, including the geometries, that NYC had to offer for each of the addresses. The final result is that Nehemiah, for the first time in its history, could visualize where their properties were on a map. The scale of their effort is remarkable and its success is worth sharing as a model for transformative change in marginalized communities.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "analysis/index.html",
    "href": "analysis/index.html",
    "title": "Analysis",
    "section": "",
    "text": "Analysis\nThis section includes the code that I used to create the final product of this project: Nehemiah HDFC’s properties merged with MAPPLUTO as a shapefile that can be visualized. For the first time in its 30+ year history, Nehemiah can visualize the scale of their work in East Brooklyn neighborhoods and tell its story through a different medium.\nTo see a visualization of the data, please scroll all the way to the bottom and engage with the interactive map.\nBest,\nGabriel",
    "crumbs": [
      "Analysis"
    ]
  },
  {
    "objectID": "analysis/3-altair-hvplot.html",
    "href": "analysis/3-altair-hvplot.html",
    "title": "Altair and Hvplot Charts",
    "section": "",
    "text": "This page is generated from a Jupyter notebook and shows examples of embedding interactive charts produced using Altair and hvPlot."
  },
  {
    "objectID": "analysis/3-altair-hvplot.html#example-measles-incidence-in-altair",
    "href": "analysis/3-altair-hvplot.html#example-measles-incidence-in-altair",
    "title": "Altair and Hvplot Charts",
    "section": "Example: Measles Incidence in Altair",
    "text": "Example: Measles Incidence in Altair\nFirst, let’s load the data for measles incidence in wide format:\n\n\nCode\nurl = \"https://raw.githubusercontent.com/MUSA-550-Fall-2023/week-2/main/data/measles_incidence.csv\"\ndata = pd.read_csv(url, skiprows=2, na_values=\"-\")\n\n\n\n\n\n\n\n\n\n\n\n\nYEAR\nWEEK\nALABAMA\nALASKA\nARIZONA\nARKANSAS\nCALIFORNIA\nCOLORADO\nCONNECTICUT\nDELAWARE\n...\nSOUTH DAKOTA\nTENNESSEE\nTEXAS\nUTAH\nVERMONT\nVIRGINIA\nWASHINGTON\nWEST VIRGINIA\nWISCONSIN\nWYOMING\n\n\n\n\n0\n1928\n1\n3.67\nNaN\n1.90\n4.11\n1.38\n8.38\n4.50\n8.58\n...\n5.69\n22.03\n1.18\n0.4\n0.28\nNaN\n14.83\n3.36\n1.54\n0.91\n\n\n1\n1928\n2\n6.25\nNaN\n6.40\n9.91\n1.80\n6.02\n9.00\n7.30\n...\n6.57\n16.96\n0.63\nNaN\n0.56\nNaN\n17.34\n4.19\n0.96\nNaN\n\n\n2\n1928\n3\n7.95\nNaN\n4.50\n11.15\n1.31\n2.86\n8.81\n15.88\n...\n2.04\n24.66\n0.62\n0.2\n1.12\nNaN\n15.67\n4.19\n4.79\n1.36\n\n\n3\n1928\n4\n12.58\nNaN\n1.90\n13.75\n1.87\n13.71\n10.40\n4.29\n...\n2.19\n18.86\n0.37\n0.2\n6.70\nNaN\n12.77\n4.66\n1.64\n3.64\n\n\n4\n1928\n5\n8.03\nNaN\n0.47\n20.79\n2.38\n5.13\n16.80\n5.58\n...\n3.94\n20.05\n1.57\n0.4\n6.70\nNaN\n18.83\n7.37\n2.91\n0.91\n\n\n\n\n5 rows × 53 columns\n\n\n\n\nThen, use the pandas.melt() function to convert it to tidy format:\n\n\nCode\nannual = data.drop(\"WEEK\", axis=1)\nmeasles = annual.groupby(\"YEAR\").sum().reset_index()\nmeasles = measles.melt(id_vars=\"YEAR\", var_name=\"state\", value_name=\"incidence\")\n\n\n\n\n\n\n\n\n\n\n\n\nYEAR\nstate\nincidence\n\n\n\n\n0\n1928\nALABAMA\n334.99\n\n\n1\n1929\nALABAMA\n111.93\n\n\n2\n1930\nALABAMA\n157.00\n\n\n3\n1931\nALABAMA\n337.29\n\n\n4\n1932\nALABAMA\n10.21\n\n\n\n\n\n\n\n\nFinally, load altair:\n\nimport altair as alt\n\nAnd generate our final data viz:\n\n# use a custom color map\ncolormap = alt.Scale(\n    domain=[0, 100, 200, 300, 1000, 3000],\n    range=[\n        \"#F0F8FF\",\n        \"cornflowerblue\",\n        \"mediumseagreen\",\n        \"#FFEE00\",\n        \"darkorange\",\n        \"firebrick\",\n    ],\n    type=\"sqrt\",\n)\n\n# Vertical line for vaccination year\nthreshold = pd.DataFrame([{\"threshold\": 1963}])\n\n# plot YEAR vs state, colored by incidence\nchart = (\n    alt.Chart(measles)\n    .mark_rect()\n    .encode(\n        x=alt.X(\"YEAR:O\", axis=alt.Axis(title=None, ticks=False)),\n        y=alt.Y(\"state:N\", axis=alt.Axis(title=None, ticks=False)),\n        color=alt.Color(\"incidence:Q\", sort=\"ascending\", scale=colormap, legend=None),\n        tooltip=[\"state\", \"YEAR\", \"incidence\"],\n    )\n    .properties(width=650, height=500)\n)\n\nrule = alt.Chart(threshold).mark_rule(strokeWidth=4).encode(x=\"threshold:O\")\n\nout = chart + rule\nout"
  },
  {
    "objectID": "analysis/3-altair-hvplot.html#example-measles-incidence-in-hvplot",
    "href": "analysis/3-altair-hvplot.html#example-measles-incidence-in-hvplot",
    "title": "Altair and Hvplot Charts",
    "section": "Example: Measles Incidence in hvplot",
    "text": "Example: Measles Incidence in hvplot\n\n\n\n\n\n\n\n\n\n\n\nGenerate the same data viz in hvplot:\n\n# Make the heatmap with hvplot\nheatmap = measles.hvplot.heatmap(\n    x=\"YEAR\",\n    y=\"state\",\n    C=\"incidence\", # color each square by the incidence\n    reduce_function=np.sum, # sum the incidence for each state/year\n    frame_height=450,\n    frame_width=600,\n    flip_yaxis=True,\n    rot=90,\n    colorbar=False,\n    cmap=\"viridis\",\n    xlabel=\"\",\n    ylabel=\"\",\n)\n\n# Some additional formatting using holoviews \n# For more info: http://holoviews.org/user_guide/Customizing_Plots.html\nheatmap = heatmap.redim(state=\"State\", YEAR=\"Year\")\nheatmap = heatmap.opts(fontsize={\"xticks\": 0, \"yticks\": 6}, toolbar=\"above\")\nheatmap"
  },
  {
    "objectID": "analysis/1-python-code-blocks.html",
    "href": "analysis/1-python-code-blocks.html",
    "title": "Python code blocks",
    "section": "",
    "text": "This is an example from the Quarto documentation that shows how to mix executable Python code blocks into a markdown file in a “Quarto markdown” .qmd file.\nFor a demonstration of a line plot on a polar axis, see Figure 1.\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\n\n\n\n\n\n\n\nFigure 1: A line plot on a polar axis"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Gabriel Hernandez Dominguez",
    "section": "",
    "text": "Hello Everyone,\nMy name is Gabriel. I was born in Cuba and came to United States when I was 7 years old. In many ways, that experience, and that of returning ‘home’ every 3 years, significantly shaped my self and my academic interests. I research the intersection between production of history, material realities, and people. Naturally, this led me to the field of planning and real estate development. Furthermore, my interest in the minds of individuals motivated me to pursue minors in both Religions and Psychology.\nIn my final year of undergrad at Hunter College, I took an introduction to GIS course that opened my eyes to the value of spatial data and its potential to aid decision making and its power to provide insight into the relationship between people and the built environment. I also see a future in which i use my computation and spatial analysis skills to perform market and site analysis for my own projects. Overall, I hope to help communities tell their own stories and assist organizations in the development of policies and initiatives that holistically tackle the issues of their constituents.",
    "crumbs": [
      "Gabriel Hernandez Dominguez"
    ]
  },
  {
    "objectID": "analysis/2-static-images.html",
    "href": "analysis/2-static-images.html",
    "title": "Showing static visualizations",
    "section": "",
    "text": "This page is generated from a Jupyter notebook and demonstrates how to generate static visualizations with matplotlib, pandas, and seaborn.\nStart by importing the packages we need:\nimport pandas as pd\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nLoad the “Palmer penguins” dataset from week 2:\n# Load data on Palmer penguins\npenguins = pd.read_csv(\"https://raw.githubusercontent.com/MUSA-550-Fall-2023/week-2/main/data/penguins.csv\")\n# Show the first ten rows\npenguins.head(n=10)    \n\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nmale\n2007\n\n\n1\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nfemale\n2007\n\n\n2\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nfemale\n2007\n\n\n3\nAdelie\nTorgersen\nNaN\nNaN\nNaN\nNaN\nNaN\n2007\n\n\n4\nAdelie\nTorgersen\n36.7\n19.3\n193.0\n3450.0\nfemale\n2007\n\n\n5\nAdelie\nTorgersen\n39.3\n20.6\n190.0\n3650.0\nmale\n2007\n\n\n6\nAdelie\nTorgersen\n38.9\n17.8\n181.0\n3625.0\nfemale\n2007\n\n\n7\nAdelie\nTorgersen\n39.2\n19.6\n195.0\n4675.0\nmale\n2007\n\n\n8\nAdelie\nTorgersen\n34.1\n18.1\n193.0\n3475.0\nNaN\n2007\n\n\n9\nAdelie\nTorgersen\n42.0\n20.2\n190.0\n4250.0\nNaN\n2007"
  },
  {
    "objectID": "analysis/2-static-images.html#a-simple-visualization-3-different-ways",
    "href": "analysis/2-static-images.html#a-simple-visualization-3-different-ways",
    "title": "Showing static visualizations",
    "section": "A simple visualization, 3 different ways",
    "text": "A simple visualization, 3 different ways\n\nI want to scatter flipper length vs. bill length, colored by the penguin species\n\n\nUsing matplotlib\n\n# Setup a dict to hold colors for each species\ncolor_map = {\"Adelie\": \"#1f77b4\", \"Gentoo\": \"#ff7f0e\", \"Chinstrap\": \"#D62728\"}\n\n# Initialize the figure \"fig\" and axes \"ax\"\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Group the data frame by species and loop over each group\n# NOTE: \"group\" will be the dataframe holding the data for \"species\"\nfor species, group_df in penguins.groupby(\"species\"):\n\n    # Plot flipper length vs bill length for this group\n    # Note: we are adding this plot to the existing \"ax\" object\n    ax.scatter(\n        group_df[\"flipper_length_mm\"],\n        group_df[\"bill_length_mm\"],\n        marker=\"o\",\n        label=species,\n        color=color_map[species],\n        alpha=0.75,\n        zorder=10\n    )\n\n# Plotting is done...format the axes!\n\n## Add a legend to the axes\nax.legend(loc=\"best\")\n\n## Add x-axis and y-axis labels\nax.set_xlabel(\"Flipper Length (mm)\")\nax.set_ylabel(\"Bill Length (mm)\")\n\n## Add the grid of lines\nax.grid(True);\n\n\n\n\n\n\n\n\n\n\nHow about in pandas?\nDataFrames have a built-in “plot” function that can make all of the basic type of matplotlib plots!\nFirst, we need to add a new “color” column specifying the color to use for each species type.\nUse the pd.replace() function: it use a dict to replace values in a DataFrame column.\n\n# Calculate a list of colors\ncolor_map = {\"Adelie\": \"#1f77b4\", \"Gentoo\": \"#ff7f0e\", \"Chinstrap\": \"#D62728\"}\n\n# Map species name to color \npenguins[\"color\"] = penguins[\"species\"].replace(color_map)\n\npenguins.head()\n\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\ncolor\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nmale\n2007\n#1f77b4\n\n\n1\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nfemale\n2007\n#1f77b4\n\n\n2\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nfemale\n2007\n#1f77b4\n\n\n3\nAdelie\nTorgersen\nNaN\nNaN\nNaN\nNaN\nNaN\n2007\n#1f77b4\n\n\n4\nAdelie\nTorgersen\n36.7\n19.3\n193.0\n3450.0\nfemale\n2007\n#1f77b4\n\n\n\n\n\n\n\n\nNow plot!\n\n# Same as before: Start by initializing the figure and axes\nfig, myAxes = plt.subplots(figsize=(10, 6))\n\n# Scatter plot two columns, colored by third\n# Use the built-in pandas plot.scatter function\npenguins.plot.scatter(\n    x=\"flipper_length_mm\",\n    y=\"bill_length_mm\",\n    c=\"color\",\n    alpha=0.75,\n    ax=myAxes, # IMPORTANT: Make sure to plot on the axes object we created already!\n    zorder=10\n)\n\n# Format the axes finally\nmyAxes.set_xlabel(\"Flipper Length (mm)\")\nmyAxes.set_ylabel(\"Bill Length (mm)\")\nmyAxes.grid(True);\n\n\n\n\n\n\n\n\nNote: no easy way to get legend added to the plot in this case…\n\n\nSeaborn: statistical data visualization\nSeaborn is designed to plot two columns colored by a third column…\n\n# Initialize the figure and axes\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# style keywords as dict\ncolor_map = {\"Adelie\": \"#1f77b4\", \"Gentoo\": \"#ff7f0e\", \"Chinstrap\": \"#D62728\"}\nstyle = dict(palette=color_map, s=60, edgecolor=\"none\", alpha=0.75, zorder=10)\n\n# use the scatterplot() function\nsns.scatterplot(\n    x=\"flipper_length_mm\",  # the x column\n    y=\"bill_length_mm\",  # the y column\n    hue=\"species\",  # the third dimension (color)\n    data=penguins,  # pass in the data\n    ax=ax,  # plot on the axes object we made\n    **style  # add our style keywords\n)\n\n# Format with matplotlib commands\nax.set_xlabel(\"Flipper Length (mm)\")\nax.set_ylabel(\"Bill Length (mm)\")\nax.grid(True)\nax.legend(loc=\"best\");"
  },
  {
    "objectID": "analysis/4-folium.html",
    "href": "analysis/4-folium.html",
    "title": "Interactive Maps with Folium",
    "section": "",
    "text": "This page is generated from a Jupyter notebook and shows examples of embedding interactive maps produced using Folium."
  },
  {
    "objectID": "analysis/4-folium.html#finding-the-shortest-route",
    "href": "analysis/4-folium.html#finding-the-shortest-route",
    "title": "Interactive Maps with Folium",
    "section": "Finding the shortest route",
    "text": "Finding the shortest route\nThis example finds the shortest route between the Art Musuem and the Liberty Bell using osmnx.\n\nimport osmnx as ox\n\nFirst, identify the lat/lng coordinates for our places of interest. Use osmnx to download the geometries for the Libery Bell and Art Museum.\n\nphilly_tourism = ox.features_from_place(\"Philadelphia, PA\", tags={\"tourism\": True})\n\n\nart_museum = philly_tourism.query(\"name == 'Philadelphia Museum of Art'\").squeeze()\n\nart_museum.geometry\n\n\n\n\n\n\n\n\n\nliberty_bell = philly_tourism.query(\"name == 'Liberty Bell'\").squeeze()\n\nliberty_bell.geometry\n\n\n\n\n\n\n\n\nNow, extract the lat and lng coordinates\nFor the Art Museum geometry, we can use the .geometry.centroid attribute to calculate the centroid of the building footprint.\n\nliberty_bell_x = liberty_bell.geometry.x\nliberty_bell_y = liberty_bell.geometry.y\n\n\nart_museum_x = art_museum.geometry.centroid.x\nart_museum_y = art_museum.geometry.centroid.y\n\nNext, use osmnx to download the street graph around Center City.\n\nG_cc = ox.graph_from_address(\n    \"City Hall, Philadelphia, USA\", dist=1500, network_type=\"drive\"\n)\n\nNext, identify the nodes in the graph closest to our points of interest.\n\n# Get the origin node (Liberty Bell)\norig_node = ox.nearest_nodes(G_cc, liberty_bell_x, liberty_bell_y)\n\n# Get the destination node (Art Musuem)\ndest_node = ox.nearest_nodes(G_cc, art_museum_x, art_museum_y)\n\nFind the shortest path, based on the distance of the edges:\n\n# Get the shortest path --&gt; just a list of node IDs\nroute = ox.shortest_path(G_cc, orig_node, dest_node, weight=\"length\")\n\nHow about an interactive version?\nosmnx has a helper function ox.utils_graph.route_to_gdf() to convert a route to a GeoDataFrame of edges.\n\nox.utils_graph.route_to_gdf(G_cc, route, weight=\"length\").explore(\n    tiles=\"cartodb positron\",\n    color=\"red\",\n)\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/4-folium.html#examining-trash-related-311-requests",
    "href": "analysis/4-folium.html#examining-trash-related-311-requests",
    "title": "Interactive Maps with Folium",
    "section": "Examining Trash-Related 311 Requests",
    "text": "Examining Trash-Related 311 Requests\nFirst, let’s load the dataset from a CSV file and convert to a GeoDataFrame:\n\n\nCode\n# Load the data from a CSV file into a pandas DataFrame\ntrash_requests_df = pd.read_csv(\n    \"https://raw.githubusercontent.com/MUSA-550-Fall-2023/week-4/main/data/trash_311_requests_2020.csv\"\n)\n\n# Remove rows with missing geometry\ntrash_requests_df = trash_requests_df.dropna(subset=[\"lat\", \"lon\"])\n\n\n# Create our GeoDataFrame with geometry column created from lon/lat\ntrash_requests = gpd.GeoDataFrame(\n    trash_requests_df,\n    geometry=gpd.points_from_xy(trash_requests_df[\"lon\"], trash_requests_df[\"lat\"]),\n    crs=\"EPSG:4326\",\n)\n\n\nLoad neighborhoods and do the spatial join to associate a neighborhood with each ticket:\n\n\nCode\n# Load the neighborhoods\nneighborhoods = gpd.read_file(\n    \"https://raw.githubusercontent.com/MUSA-550-Fall-2023/week-4/main/data/zillow_neighborhoods.geojson\"\n)\n\n# Do the spatial join to add the \"ZillowName\" column\nrequests_with_hood = gpd.sjoin(\n    trash_requests,\n    neighborhoods.to_crs(trash_requests.crs),\n    predicate=\"within\",\n)\n\n\nLet’s explore the 311 requests in the Greenwich neighborhood of the city:\n\n# Extract out the point tickets for Greenwich\ngreenwich_tickets = requests_with_hood.query(\"ZillowName == 'Greenwich'\")\n\n\n# Get the neighborhood boundary for Greenwich\ngreenwich_geo = neighborhoods.query(\"ZillowName == 'Greenwich'\")\n\ngreenwich_geo.squeeze().geometry\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nQuarto has callout blocks that you can use to emphasize content in different ways. This is a “Note” callout block. More info is available on the Quarto documentation.\n\n\nImport the packages we need:\n\nimport folium\nimport xyzservices\n\nCombine the tickets as markers and the neighborhood boundary on the same Folium map:\n\n# Plot the neighborhood boundary\nm = greenwich_geo.explore(\n    style_kwds={\"weight\": 4, \"color\": \"black\", \"fillColor\": \"none\"},\n    name=\"Neighborhood boundary\",\n    tiles=xyzservices.providers.CartoDB.Voyager,\n)\n\n\n# Add the individual tickets as circle markers and style them\ngreenwich_tickets.explore(\n    m=m,  # Add to the existing map!\n    marker_kwds={\"radius\": 7, \"fill\": True, \"color\": \"crimson\"},\n    marker_type=\"circle_marker\", # or 'marker' or 'circle'\n    name=\"Tickets\",\n)\n\n# Hse folium to add layer control\nfolium.LayerControl().add_to(m)\n\nm  # show map\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/MUSA_FINAL.html",
    "href": "analysis/MUSA_FINAL.html",
    "title": "PROJECT",
    "section": "",
    "text": "import cenpy\nimport pandas as pd\nimport geopandas as gpd\nimport os\nimport folium\nimport matplotlib\nimport numpy as np\nimport re\n\n\n#settings\npd.options.display.max_rows = 9999 \npd.options.display.max_colwidth = 100\npd.set_option('display.max_columns', None)\n#change current directory to project folder\nos.chdir(\"C:/Users/Gabriel/Desktop/PYTHON FINAL\")\n#colors below, in order: darkblue,black,textonsite,spring creek light blue, spring creek green,\nnehemiah_colors = ['#006578','#231f20', '#006579', '#9fc7dc', '#26b797']\n\n\n#set crs\ncrs= \"ESRI:102718\"\n\n\n#load data for analysis\n#MapPluto GEOGRAPHIC COORDINATE REFERENCE GCS_North_American_1983 & PROJECTION NAD_1983_StatePlane_New_York_Long_Island_FIPS_3104_Feet\n\n#zipfile = \"zip:///Users/Gabriel/Desktop/PYTHON FINAL/data/MapPLuto_NYC/nyc_mappluto_23v3_shp.zip\"\n#nyc_mappluto = gpd.read_file(zipfile)\n\n\n#ensure that it is a geopandas dataframe and that identifiers are strings\n\n#nyc_mappluto =  gpd.GeoDataFrame(nyc_mappluto)\n\n# Save GeoDataFrame to Shapefile\n#output_file = \"/Users/Gabriel/Desktop/PYTHON FINAL/data/MapPLuto_NYC/nyc_mappluto.shp\"\n#nyc_mappluto.to_file(output_file)\n\n\n#Read shapefile\nnyc_mappluto = gpd.read_file(\"/Users/Gabriel/Desktop/PYTHON FINAL/data/MapPLuto_NYC/nyc_mappluto.shp\")\n\n\nnyc_mappluto.info()\n\n\n# save geodatafram as GEOJSON for faster loading in the future\n\n#Get the current working directory\ncurrent_directory = os.getcwd()\n\n# Save GeoDataFrame to Shapefile\n#output_file = \"/Users/Gabriel/Desktop/PYTHON FINAL/data/MapPLuto_NYC/nyc_mappluto.shp\"\n#nyc_mappluto.to_file(output_file)\n\n\n#easier computing to load it in\n#nyc_mappluto = gpd.GeoDataFrame(gpd.read_file(r\"./nyc_mappluto.geojson\"), geometry='geometry')\n\n\n# Convert specific columns to string type - prep for merge (didnt work, merged by address instead)\ncolumns_to_convert = ['Borough', 'Block', 'Lot']\nnyc_mappluto[columns_to_convert] = nyc_mappluto[columns_to_convert].astype(str)\n\nnyc_mappluto.info()\n\n&lt;class 'geopandas.geodataframe.GeoDataFrame'&gt;\nRangeIndex: 856819 entries, 0 to 856818\nData columns (total 96 columns):\n #   Column             Non-Null Count   Dtype   \n---  ------             --------------   -----   \n 0   Borough            856819 non-null  object  \n 1   Block              856819 non-null  object  \n 2   Lot                856819 non-null  object  \n 3   CD                 856819 non-null  int64   \n 4   BCT2020            856796 non-null  object  \n 5   BCTCB2020          856796 non-null  object  \n 6   CT2010             856796 non-null  object  \n 7   CB2010             856796 non-null  object  \n 8   SchoolDist         856233 non-null  object  \n 9   Council            856819 non-null  int64   \n 10  ZipCode            856819 non-null  int64   \n 11  FireComp           856217 non-null  object  \n 12  PolicePrct         856819 non-null  int64   \n 13  HealthCent         856819 non-null  int64   \n 14  HealthArea         856819 non-null  int64   \n 15  Sanitboro          856032 non-null  object  \n 16  SanitDistr         856032 non-null  object  \n 17  SanitSub           855910 non-null  object  \n 18  Address            856819 non-null  object  \n 19  ZoneDist1          856806 non-null  object  \n 20  ZoneDist2          19725 non-null   object  \n 21  ZoneDist3          214 non-null     object  \n 22  ZoneDist4          13 non-null      object  \n 23  Overlay1           74429 non-null   object  \n 24  Overlay2           176 non-null     object  \n 25  SPDist1            105431 non-null  object  \n 26  SPDist2            299 non-null     object  \n 27  SPDist3            0 non-null       float64 \n 28  LtdHeight          3047 non-null    object  \n 29  SplitZone          856806 non-null  object  \n 30  BldgClass          856472 non-null  object  \n 31  LandUse            854201 non-null  object  \n 32  Easements          856819 non-null  int64   \n 33  OwnerType          34689 non-null   object  \n 34  OwnerName          856454 non-null  object  \n 35  LotArea            856819 non-null  int64   \n 36  BldgArea           856819 non-null  int64   \n 37  ComArea            856819 non-null  int64   \n 38  ResArea            856819 non-null  int64   \n 39  OfficeArea         856819 non-null  int64   \n 40  RetailArea         856819 non-null  int64   \n 41  GarageArea         856819 non-null  int64   \n 42  StrgeArea          856819 non-null  int64   \n 43  FactryArea         856819 non-null  int64   \n 44  OtherArea          856819 non-null  int64   \n 45  AreaSource         856471 non-null  object  \n 46  NumBldgs           856819 non-null  int64   \n 47  NumFloors          856819 non-null  float64 \n 48  UnitsRes           856819 non-null  int64   \n 49  UnitsTotal         856819 non-null  int64   \n 50  LotFront           856819 non-null  float64 \n 51  LotDepth           856819 non-null  float64 \n 52  BldgFront          856819 non-null  float64 \n 53  BldgDepth          856819 non-null  float64 \n 54  Ext                796133 non-null  object  \n 55  ProxCode           856471 non-null  object  \n 56  IrrLotCode         856471 non-null  object  \n 57  LotType            856471 non-null  object  \n 58  BsmtCode           856471 non-null  object  \n 59  AssessLand         856819 non-null  float64 \n 60  AssessTot          856819 non-null  float64 \n 61  ExemptTot          856819 non-null  float64 \n 62  YearBuilt          856819 non-null  int64   \n 63  YearAlter1         856819 non-null  int64   \n 64  YearAlter2         856819 non-null  int64   \n 65  HistDist           32490 non-null   object  \n 66  Landmark           1448 non-null    object  \n 67  BuiltFAR           856819 non-null  float64 \n 68  ResidFAR           856819 non-null  float64 \n 69  CommFAR            856819 non-null  float64 \n 70  FacilFAR           856819 non-null  float64 \n 71  BoroCode           856819 non-null  int64   \n 72  BBL                856819 non-null  float64 \n 73  CondoNo            856819 non-null  int64   \n 74  Tract2010          856796 non-null  object  \n 75  XCoord             856819 non-null  int64   \n 76  YCoord             856819 non-null  int64   \n 77  ZoneMap            856815 non-null  object  \n 78  ZMCode             15618 non-null   object  \n 79  Sanborn            856328 non-null  object  \n 80  TaxMap             856328 non-null  object  \n 81  EDesigNum          9869 non-null    object  \n 82  APPBBL             856819 non-null  float64 \n 83  APPDate            95442 non-null   object  \n 84  PLUTOMapID         856819 non-null  object  \n 85  FIRM07_FLA         34461 non-null   object  \n 86  PFIRM15_FL         65527 non-null   object  \n 87  Version            856819 non-null  object  \n 88  DCPEdited          41784 non-null   object  \n 89  Latitude           856819 non-null  float64 \n 90  Longitude          856819 non-null  float64 \n 91  Notes              0 non-null       float64 \n 92  Shape_Leng         856819 non-null  float64 \n 93  Shape_Area         856819 non-null  float64 \n 94  geometry           856819 non-null  geometry\n 95  Parcel Identifier  856819 non-null  object  \ndtypes: float64(20), geometry(1), int64(27), object(48)\nmemory usage: 627.6+ MB\n\n\n\n\n#convert borough abbreviation to borough code that matches nehemiahs\nconverted_borough_code_dictionary = {\"SI\":\"50\",\"MN\":\"10\", \"BX\":\"20\", \"BK\":\"30\", \"QN\":\"40\"}\n\n#replacing the borough column values using the dictionary\n\nnyc_mappluto[\"Borough\"] = nyc_mappluto['Borough'].replace( converted_borough_code_dictionary)\n\n\nnyc_mappluto.head(n=10)\n\n\n\n\n\n\n\n\n\nBorough\nBlock\nLot\nCD\nBCT2020\nBCTCB2020\nCT2010\nCB2010\nSchoolDist\nCouncil\nZipCode\nFireComp\nPolicePrct\nHealthCent\nHealthArea\nSanitboro\nSanitDistr\nSanitSub\nAddress\nZoneDist1\nZoneDist2\nZoneDist3\nZoneDist4\nOverlay1\nOverlay2\nSPDist1\nSPDist2\nSPDist3\nLtdHeight\nSplitZone\nBldgClass\nLandUse\nEasements\nOwnerType\nOwnerName\nLotArea\nBldgArea\nComArea\nResArea\nOfficeArea\nRetailArea\nGarageArea\nStrgeArea\nFactryArea\nOtherArea\nAreaSource\nNumBldgs\nNumFloors\nUnitsRes\nUnitsTotal\nLotFront\nLotDepth\nBldgFront\nBldgDepth\nExt\nProxCode\nIrrLotCode\nLotType\nBsmtCode\nAssessLand\nAssessTot\nExemptTot\nYearBuilt\nYearAlter1\nYearAlter2\nHistDist\nLandmark\nBuiltFAR\nResidFAR\nCommFAR\nFacilFAR\nBoroCode\nBBL\nCondoNo\nTract2010\nXCoord\nYCoord\nZoneMap\nZMCode\nSanborn\nTaxMap\nEDesigNum\nAPPBBL\nAPPDate\nPLUTOMapID\nFIRM07_FLA\nPFIRM15_FL\nVersion\nDCPEdited\nLatitude\nLongitude\nNotes\nShape_Leng\nShape_Area\ngeometry\nParcel Identifier\n\n\n\n\n0\n10\n0002\n0001\n101\n1000900\n10009001022\n9\n1025\n02\n1\n10004\nL015\n1\n15\n7700\n1\n01\n1B\n4 SOUTH STREET\nM1-4\nNaN\nNaN\nNaN\nNaN\nNaN\nLM\nNaN\nNaN\nNaN\nN\nY7\n07\n0\nC\nNYC DEPARTMENT OF SMALL BUSINESS SERVICES\n209215\n280000\n280000\n0\n0\n0\n0\n0\n0\n280000\n2\n1\n5.0\n0\n1\n314.28\n564.84\n268.0\n210.0\nN\n1\nY\n2\n0\n18818100.0\n31203000.0\n31203000.0\n1908\n2006\n2006\nIndividual Landmark\nNaN\n1.34\n0.0\n2.0\n6.5\n1\n1.000020e+09\n0\n0009\n980670\n194440\n12b\nNaN\n101N100\n10101\nNaN\n1.000020e+09\n08/07/2012\n1\n1\n1\n23v3\nt\n40.700369\n-74.012911\nNaN\n0.0\n100824.967451\nPOLYGON ((980609.551 194220.421, 980608.726 194221.934, 980606.237 194229.403, 980604.992 194235...\n1000020001\n\n\n1\n10\n0002\n0002\n101\n1000900\n10009001022\n9\n1025\n02\n1\n10004\nL015\n1\n15\n7700\n1\n01\n1B\n10 SOUTH STREET\nC4-6\nNaN\nNaN\nNaN\nNaN\nNaN\nLM\nNaN\nNaN\nNaN\nN\nH5\n05\n0\nC\n10 SOUTH STREET LLC\n191502\n157426\n10940\n0\n0\n0\n0\n0\n0\n10940\n2\n1\n5.0\n0\n2\n311.61\n555.84\n205.0\n270.0\nN\n0\nY\n2\n0\n18787500.0\n25020000.0\n25020000.0\n1900\n2001\n0\nNaN\nINDIVIDUAL LANDMARK\n0.82\n10.0\n3.4\n10.0\n1\n1.000020e+09\n0\n0009\n981037\n194506\n12b\nNaN\n11N 100\n10101\nNaN\n1.000020e+09\n08/07/2012\n1\n1\n1\n23v3\nNaN\n40.700550\n-74.011588\nNaN\n0.0\n87244.251304\nPOLYGON ((980795.371 194736.414, 981094.081 194825.144, 981136.781 194686.094, 981164.268 194694...\n1000020002\n\n\n2\n10\n0002\n0003\n101\n1000900\n10009000001\n9\n0001\nNaN\n1\n0\nNaN\n0\n0\n0\nNaN\nNaN\nNaN\nMARGINAL STREET\nC4-6\nNaN\nNaN\nNaN\nNaN\nNaN\nLM\nNaN\nNaN\nNaN\nN\nY7\n07\n0\nC\nNYC DEPARTMENT OF SMALL BUSINESS SERVICES\n38800\n7500\n7500\n0\n0\n0\n0\n0\n0\n7500\n2\n1\n1.0\n0\n0\n91.90\n564.56\n50.0\n75.0\nNaN\n0\nN\n2\n5\n735750.0\n796950.0\n796950.0\n1900\n0\n0\nNaN\nNaN\n0.19\n10.0\n3.4\n10.0\n1\n1.000020e+09\n0\n0009\n981224\n194590\n12b\nNaN\n101N100\n10101\nNaN\n1.000020e+09\n08/07/2012\n1\n1\n1\n23v3\nt\n40.700781\n-74.010913\nNaN\n0.0\n4362.203252\nMULTIPOLYGON (((981176.547 194654.257, 981179.144 194654.493, 981183.812 194637.066, 981181.986 ...\n1000020003\n\n\n3\n10\n0004\n7501\n101\n1000900\n10009001020\n9\n1019\n02\n1\n10004\nL015\n1\n15\n7700\n1\n01\n1B\n1 WATER STREET\nC5-5\nNaN\nNaN\nNaN\nNaN\nNaN\nLM\nNaN\nNaN\nNaN\nN\nRC\n05\n0\nNaN\nONE NY PLAZA CO LLC\n111382\n1888126\n1888126\n0\n1848626\n39500\n0\n0\n0\n0\n2\n1\n50.0\n0\n63\n341.99\n290.52\n308.0\n210.0\nNaN\n0\nY\n0\n5\n47407500.0\n224384391.0\n0.0\n1969\n0\n0\nNaN\nNaN\n16.95\n10.0\n15.0\n15.0\n1\n1.000048e+09\n835\n0009\n980917\n195090\n12b\nNaN\n101S001\n10101\nNaN\n1.000040e+09\n12/03/1993\n1\n1\n1\n23v3\nNaN\n40.702153\n-74.012021\nNaN\n0.0\n116801.092518\nPOLYGON ((980744.311 195176.547, 980768.259 195194.086, 980795.044 195212.723, 980832.387 195236...\n1000047501\n\n\n4\n10\n0007\n0027\n101\n1000900\n10009001015\n9\n1016\n02\n1\n10004\nL015\n1\n15\n7700\n1\n01\n1B\n30 WATER STREET\nC5-5\nNaN\nNaN\nNaN\nNaN\nNaN\nLM\nNaN\nNaN\nNaN\nN\nK2\n05\n0\nNaN\nPH WATER STREET LLC\n1019\n3632\n3632\n0\n0\n3632\n0\n0\n0\n0\n2\n1\n4.5\n0\n2\n18.92\n52.83\n19.0\n53.0\nN\n3\nY\n5\n2\n229500.0\n583200.0\n0.0\n1828\n0\n0\nFraunces Tavern Block Historic District\nNaN\n3.56\n10.0\n15.0\n15.0\n1\n1.000070e+09\n0\n0009\n981194\n195504\n12b\nNaN\n101S002\n10101\nNaN\n0.000000e+00\nNaN\n1\n1\n1\n23v3\nt\n40.703289\n-74.011022\nNaN\n0.0\n1196.360370\nPOLYGON ((981177.774 195531.768, 981195.992 195537.237, 981211.580 195476.632, 981193.535 195470...\n1000070027\n\n\n5\n10\n0007\n0028\n101\n1000900\n10009001015\n9\n1016\n02\n1\n10004\nL015\n1\n15\n7700\n1\n01\n1B\n28 WATER STREET\nC5-5\nNaN\nNaN\nNaN\nNaN\nNaN\nLM\nNaN\nNaN\nNaN\nN\nK4\n04\n0\nNaN\nMAYIM MGMT LLC\n769\n4104\n4104\n0\n1026\n3078\n0\n0\n0\n0\n2\n1\n4.5\n0\n3\n19.00\n53.92\n19.0\n54.0\nN\n3\nY\n5\n2\n247500.0\n370800.0\n0.0\n1828\n0\n0\nFraunces Tavern Block Historic District\nNaN\n5.34\n10.0\n15.0\n15.0\n1\n1.000070e+09\n0\n0009\n981178\n195493\n12b\nNaN\n101S002\n10101\nNaN\n0.000000e+00\nNaN\n1\n1\n1\n23v3\nt\n40.703259\n-74.011080\nNaN\n0.0\n1007.979523\nPOLYGON ((981176.595 195508.508, 981172.813 195523.703, 981169.883 195522.829, 981168.361 195528...\n1000070028\n\n\n6\n10\n0007\n0029\n101\n1000900\n10009001015\n9\n1016\n02\n1\n10004\nL015\n1\n15\n7700\n1\n01\n1B\n26 WATER STREET\nC5-5\nNaN\nNaN\nNaN\nNaN\nNaN\nLM\nNaN\nNaN\nNaN\nN\nP7\n08\n0\nNaN\nSONS OF THE REVOLUTION STATE OF NY\n833\n4800\n4800\n0\n0\n1600\n0\n800\n0\n2400\n2\n1\n5.0\n0\n2\n19.00\n41.00\n19.0\n39.0\nN\n3\nY\n5\n2\n132750.0\n465300.0\n279180.0\n1828\n0\n0\nFraunces Tavern Block Historic District\nNaN\n5.76\n10.0\n15.0\n15.0\n1\n1.000070e+09\n0\n0009\n981160\n195488\n12b\nNaN\n101S002\n10101\nNaN\n0.000000e+00\nNaN\n1\n1\n1\n23v3\nt\n40.703246\n-74.011145\nNaN\n0.0\n1063.856582\nPOLYGON ((981171.915 195514.664, 981169.883 195522.829, 981172.813 195523.703, 981176.595 195508...\n1000070029\n\n\n7\n10\n0007\n0030\n101\n1000900\n10009001015\n9\n1016\n02\n1\n10004\nL015\n1\n15\n7700\n1\n01\n1B\n24 WATER STREET\nC5-5\nNaN\nNaN\nNaN\nNaN\nNaN\nLM\nNaN\nNaN\nNaN\nN\nP7\n08\n0\nNaN\nSONS OF THE REVOLUTION\n1057\n6045\n6045\n0\n0\n2016\n0\n858\n0\n3171\n2\n1\n5.0\n0\n2\n27.92\n35.75\n28.0\n36.0\nN\n3\nY\n5\n2\n179550.0\n742500.0\n445500.0\n1863\n0\n0\nFraunces Tavern Block Historic District\nNaN\n5.72\n10.0\n15.0\n15.0\n1\n1.000070e+09\n0\n0009\n981137\n195473\n12b\nNaN\n101S002\n10101\nNaN\n0.000000e+00\nNaN\n1\n1\n1\n23v3\nt\n40.703204\n-74.011227\nNaN\n0.0\n1183.795281\nPOLYGON ((981117.950 195489.006, 981146.234 195497.476, 981156.493 195457.812, 981130.371 195448...\n1000070030\n\n\n8\n10\n0007\n0031\n101\n1000900\n10009001015\n9\n1016\n02\n1\n10004\nL015\n1\n15\n7700\n1\n01\n1B\n105 BROAD STREET\nC5-5\nNaN\nNaN\nNaN\nNaN\nNaN\nLM\nNaN\nNaN\nNaN\nN\nK4\n04\n0\nNaN\nFASHION MANAGEMENT CORP\n1512\n7475\n4485\n2990\n1495\n2990\n0\n0\n0\n0\n2\n1\n5.0\n2\n5\n36.17\n46.67\n36.0\n44.0\nN\n3\nY\n3\n2\n540000.0\n823050.0\n0.0\n1883\n0\n0\nFraunces Tavern Block Historic District\nNaN\n4.94\n10.0\n15.0\n15.0\n1\n1.000070e+09\n0\n0009\n981102\n195461\n12b\nNaN\n101S002\n10101\nNaN\n0.000000e+00\nNaN\n1\n1\n1\n23v3\nt\n40.703172\n-74.011354\nNaN\n0.0\n1905.689626\nPOLYGON ((981130.371 195448.888, 981083.824 195432.986, 981079.817 195477.586, 981117.950 195489...\n1000070031\n\n\n9\n10\n0007\n0033\n101\n1000900\n10009001015\n9\n1016\n02\n1\n10004\nL015\n1\n15\n7700\n1\n01\n1B\n101 BROAD STREET\nC5-5\nNaN\nNaN\nNaN\nNaN\nNaN\nLM\nNaN\nNaN\nNaN\nN\nP7\n08\n0\nNaN\nSONS OF THE REVOLUTION STATE OF NY\n2180\n6120\n6120\n0\n0\n2180\n0\n0\n0\n3940\n2\n1\n3.0\n0\n3\n34.92\n69.75\n34.0\n69.0\nN\n3\nY\n5\n2\n450000.0\n1009800.0\n656377.0\n1854\n0\n0\nFraunces Tavern Block Historic District\nNaN\n2.81\n10.0\n15.0\n15.0\n1\n1.000070e+09\n0\n0009\n981110\n195505\n12b\nNaN\n101S002\n10101\nNaN\n0.000000e+00\nNaN\n1\n1\n1\n23v3\nt\n40.703292\n-74.011325\nNaN\n0.0\n2389.483990\nPOLYGON ((981143.982 195506.280, 981146.234 195497.476, 981117.950 195489.006, 981079.817 195477...\n1000070033\n\n\n\n\n\n\n\n\n\n#combine borough,block, and lot into a PArcel Identifier\n\nnyc_mappluto['Block'] = nyc_mappluto['Block'].str.pad(width=4, fillchar='0')\nnyc_mappluto['Lot'] = nyc_mappluto['Lot'].str.pad(width=4, fillchar='0')\n\n#then concat\nnyc_mappluto['Parcel_Identifier'] = nyc_mappluto['Borough'].str.cat([nyc_mappluto['Block'], nyc_mappluto['Lot']], sep='').astype(str)\n#nyc_mappluto = nyc_mappluto.drop_duplicates(subset=[\"Address\"])\nnyc_mappluto.head(n=1)\n\n\n\n\n\n\n\n\n\nBorough\nBlock\nLot\nCD\nBCT2020\nBCTCB2020\nCT2010\nCB2010\nSchoolDist\nCouncil\nZipCode\nFireComp\nPolicePrct\nHealthCent\nHealthArea\nSanitboro\nSanitDistr\nSanitSub\nAddress\nZoneDist1\nZoneDist2\nZoneDist3\nZoneDist4\nOverlay1\nOverlay2\nSPDist1\nSPDist2\nSPDist3\nLtdHeight\nSplitZone\nBldgClass\nLandUse\nEasements\nOwnerType\nOwnerName\nLotArea\nBldgArea\nComArea\nResArea\nOfficeArea\nRetailArea\nGarageArea\nStrgeArea\nFactryArea\nOtherArea\nAreaSource\nNumBldgs\nNumFloors\nUnitsRes\nUnitsTotal\nLotFront\nLotDepth\nBldgFront\nBldgDepth\nExt\nProxCode\nIrrLotCode\nLotType\nBsmtCode\nAssessLand\nAssessTot\nExemptTot\nYearBuilt\nYearAlter1\nYearAlter2\nHistDist\nLandmark\nBuiltFAR\nResidFAR\nCommFAR\nFacilFAR\nBoroCode\nBBL\nCondoNo\nTract2010\nXCoord\nYCoord\nZoneMap\nZMCode\nSanborn\nTaxMap\nEDesigNum\nAPPBBL\nAPPDate\nPLUTOMapID\nFIRM07_FLA\nPFIRM15_FL\nVersion\nDCPEdited\nLatitude\nLongitude\nNotes\nShape_Leng\nShape_Area\ngeometry\nParcel Identifier\nParcel_Identifier\n\n\n\n\n0\n10\n0002\n0001\n101\n1000900\n10009001022\n9\n1025\n02\n1\n10004\nL015\n1\n15\n7700\n1\n01\n1B\n4 SOUTH STREET\nM1-4\nNaN\nNaN\nNaN\nNaN\nNaN\nLM\nNaN\nNaN\nNaN\nN\nY7\n07\n0\nC\nNYC DEPARTMENT OF SMALL BUSINESS SERVICES\n209215\n280000\n280000\n0\n0\n0\n0\n0\n0\n280000\n2\n1\n5.0\n0\n1\n314.28\n564.84\n268.0\n210.0\nN\n1\nY\n2\n0\n18818100.0\n31203000.0\n31203000.0\n1908\n2006\n2006\nIndividual Landmark\nNaN\n1.34\n0.0\n2.0\n6.5\n1\n1.000020e+09\n0\n0009\n980670\n194440\n12b\nNaN\n101N100\n10101\nNaN\n1.000020e+09\n08/07/2012\n1\n1\n1\n23v3\nt\n40.700369\n-74.012911\nNaN\n0.0\n100824.967451\nPOLYGON ((980609.551 194220.421, 980608.726 194221.934, 980606.237 194229.403, 980604.992 194235...\n1000020001\n1000020001\n\n\n\n\n\n\n\n\n\n#laod in the Nehemiah propeties data\n\nnehemiah_p = pd.read_csv(r\"./data/Nehemiah/5. All Properties.csv\", encoding='UTF-8')\n\n\nnehemiah_p.head(n=20)\n\n\n\n\n\n\n\n\n\nProject\nAddress\nParcel Identifier\n# of Units\nYear Developed\nDevelopment Phase\nBorough\nState\nCounty\n\n\n\n\n0\nNehemiah - East New York\n94 Bentley Ave\nNO RESULTS FOUND\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\n\n\n1\nNehemiah - East New York\n577 Essex Street\n40-4068-0017\n1.0\n1989.0\nSold\nBrooklyn\nNY\nKings\n\n\n2\nNehemiah - East New York\n4323 Clarendon Rd.\n30-4943-0014\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\n\n\n3\nNehemiah - Spring Creek\n912 Erskine Street\n30-4586-0977\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\n\n\n4\nNehemiah - Spring Creek\n910 Erskine Street\n30-4586-0976\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\n\n\n5\nNehemiah - Spring Creek\n908 Erskine Street\n30-4586-0975\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\n\n\n6\nNehemiah - Spring Creek\n906 Erskine Street\n30-4586-0974\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\n\n\n7\nNehemiah - Spring Creek\n904 Erskine Street\n30-4586-0973\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\n\n\n8\nNehemiah - Spring Creek\n902 Erskine Street\n30-4586-0972\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\n\n\n9\nNehemiah - Spring Creek\n900 Erskine Street\n30-4586-0971\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\n\n\n10\nNehemiah - Spring Creek\n650 Schroeders Avenue\n30-4586-0970\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\n\n\n11\nNehemiah - Spring Creek\n648 Schroeders Avenue\n30-4586-0969\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\n\n\n12\nNehemiah - Spring Creek\n646 Schroeders Avenue\n30-4586-0968\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\n\n\n13\nNehemiah - Spring Creek\n644 Schroeders Avenue\n30-4586-0967\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\n\n\n14\nNehemiah - Spring Creek\n642 Schroeders Avenue\n30-4586-0966\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\n\n\n15\nNehemiah - Spring Creek\n640 Schroeders Avenue\n30-4586-0965\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\n\n\n16\nNehemiah - Spring Creek\n638 Schroeders Avenue\n30-4586-0964\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\n\n\n17\nNehemiah - Spring Creek\n636 Schroeders Avenue\n30-4586-0963\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\n\n\n18\nNehemiah - Spring Creek\n634 Schroeders Avenue\n30-4586-0962\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\n\n\n19\nNehemiah - Spring Creek\n632 Schroeders Avenue\n30-4586-0961\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\n\n\n\n\n\n\n\n\n\n#edit Percel Identifier column to remove dashes and create unique identifier to merge with the mappluto\nnehemiah_p[\"Parcel Identifier\"] = nehemiah_p[\"Parcel Identifier\"].str.replace(\"-\",\"\")\n\n#capitaize address so it can match\nnehemiah_p['Address'] = nehemiah_p['Address'].str.upper() \n\n\nlen(nehemiah_p)\n\n2195\n\n\n\n#I had to add more data to the dataset. I wrangle it below\n\nbrownsville_prop = pd.read_csv(r\"./Nehemiah_Brownsville_PropList - Sheet1.csv\", encoding='UTF-8')\n\n#create column that identifies properties as brownsville\nbrownsville_prop['Project'] = 'Nehemiah - Brownsville'\nbrownsville_prop['Borough'] = 'Brooklyn'\nbrownsville_prop['State'] = 'NY'\nbrownsville_prop['County'] = 'Kings'\nbrownsville_prop.head(n=20)\n\n#correct MGB street\nbrownsville_prop['Address'] = brownsville_prop['Address'].replace('MGB', 'Mother Gaston', regex=True)\n\ntestrow = brownsville_prop.iloc[486]\nprint(testrow)\n\nAddress          Mother Gaston791\nProject    Nehemiah - Brownsville\nBorough                  Brooklyn\nState                          NY\nCounty                      Kings\nName: 486, dtype: object\n\n\n\nprint(len(brownsville_prop\n         ))\n\n1078\n\n\n\n#another list of spring creek adds\n\nspring_creek_adds = pd.read_csv(r'./Nehemiah Spring Creek_Unit BBL_10.17.23.csv')\nspring_creek_adds.head(10)\n\n# combine 'House #' and Address columns\n\ndef combine_columns(df):\n    #Assuming df is your DataFrame\n    df['Address'] = df['House #'].astype(str) + ' ' + df['Address'].astype(str)\n    \n    \n    return df\n\nspring_creek_adds = combine_columns(spring_creek_adds)\n\nspring_creek_adds['Address'] = spring_creek_adds['Address'].astype(str)\n\nprint(len(spring_creek_adds))\nspring_creek_adds.head(n=5)\n\n71\n\n\n\n\n\n\n\n\n\n\nProject\nPhase\nHouse #\nAddress\nBlock\nLot\nStatus\n\n\n\n\n0\nNehemiah Spring Creek\n4B-1\n475\n475 Vandalia Avenue\n4452\n290\nLeased\n\n\n1\nNehemiah Spring Creek\n4B-1\n479\n479 Vandalia Avenue\n4452\n289\nLeased\n\n\n2\nNehemiah Spring Creek\n4B-1\n481\n481 Vandalia Avenue\n4452\n288\nLeased\n\n\n3\nNehemiah Spring Creek\n4B-1\n483\n483 Vandalia Avenue\n4452\n287\nLeased\n\n\n4\nNehemiah Spring Creek\n4B-1\n485\n485 Vandalia Avenue\n4452\n286\nLeased\n\n\n\n\n\n\n\n\n\n#Create Parcel Identifier column for the above\nspring_creek_adds['Block'] = spring_creek_adds['Block'].astype(str).str.pad(width=4, fillchar='0')\nspring_creek_adds['Lot'] = spring_creek_adds['Lot'].astype(str).str.pad(width=4, fillchar='0')\n\nspring_creek_adds[\"Parcel Identifier\"] ='30' + spring_creek_adds['Block'] + spring_creek_adds['Lot']\n\nspring_creek_adds.head(n=10)\n\n\n\n\n\n\n\n\n\nProject\nPhase\nHouse #\nAddress\nBlock\nLot\nStatus\nParcel Identifier\n\n\n\n\n0\nNehemiah Spring Creek\n4B-1\n475\n475 Vandalia Avenue\n4452\n0290\nLeased\n3044520290\n\n\n1\nNehemiah Spring Creek\n4B-1\n479\n479 Vandalia Avenue\n4452\n0289\nLeased\n3044520289\n\n\n2\nNehemiah Spring Creek\n4B-1\n481\n481 Vandalia Avenue\n4452\n0288\nLeased\n3044520288\n\n\n3\nNehemiah Spring Creek\n4B-1\n483\n483 Vandalia Avenue\n4452\n0287\nLeased\n3044520287\n\n\n4\nNehemiah Spring Creek\n4B-1\n485\n485 Vandalia Avenue\n4452\n0286\nLeased\n3044520286\n\n\n5\nNehemiah Spring Creek\n4B-1\n487\n487 Vandalia Avenue\n4452\n0285\nLeased\n3044520285\n\n\n6\nNehemiah Spring Creek\n4B-1\n489\n489 Vandalia Avenue\n4452\n0284\nLeased\n3044520284\n\n\n7\nNehemiah Spring Creek\n4B-1\n491\n491 Vandalia Avenue\n4452\n0283\nLeased\n3044520283\n\n\n8\nNehemiah Spring Creek\n4B-1\n493\n493 Vandalia Avenue\n4452\n0282\nLeased\n3044520282\n\n\n9\nNehemiah Spring Creek\n4B-1\n495\n495 Vandalia Avenue\n4452\n0281\nLeased\n3044520281\n\n\n\n\n\n\n\n\n\nimport pandas as pd\nimport re\n\ndef clean_address(s):\n    if pd.isna(s):\n        return ''\n    \n    # Function to remove extra spaces\n    def remove_extra_spaces(s):\n        return ' '.join(str(s).split())\n    \n    # Function to transform address like 'lopez2464' to '2464 Lopez'\n    def transform_address(s):\n        streetnumber = ''.join(filter(str.isdigit, s))\n        streetname = ''.join(filter(lambda x: not x.isdigit(), s))\n        return f'{streetnumber} {streetname}'.strip() if streetnumber and streetname else s\n    \n    # Function to split words like 'ThomasBoyland' to 'Thomas Boyland'\n    def split_words(s):\n        return re.sub(r'(?&lt;=[a-z])(?=[A-Z])', ' ', s)\n    \n    # Function to expand common entry mistakes\n    def expand_patterns(s):\n        # Define patterns for full replacement\n        patterns = {\n            r'\\b(?:[Aa][Vv][Ee]|[Aa][Vv][Ee]\\.)\\b': 'AVENUE',\n            r'\\b[Rr][Dd](?:\\.)?\\b': 'ROAD',\n            r'\\b[Dd][Rr](?:\\.)?\\b': 'DRIVE',\n            r'\\b[Ss][Tt](?:\\.)?\\b': 'STREET',\n            r'\\b[Bb][Ll][Vv][Dd](?:\\.)?\\b': 'BOULEVARD'\n        }\n        \n        # Iterate over patterns and replace matches in the string\n        for pattern, replacement in patterns.items():\n            s = re.sub(pattern, replacement, s)\n            \n            s = re.sub(r'\\b(\\w+)\\.\\b', r'\\1', s)\n        \n        return s\n    \n    # Apply each function in sequence\n    s = transform_address(s)\n    s = split_words(s)\n    s = expand_patterns(s)\n    s = remove_extra_spaces(s)\n    \n    return s\n\n\nnehemiah_p['Address'] = nehemiah_p['Address'].apply(clean_address)\nbrownsville_prop['Address'] = brownsville_prop['Address'].apply(clean_address)\nspring_creek_adds['Address'] = spring_creek_adds['Address'].apply(clean_address)\n\n#upper case for mappluto merge\n\nbrownsville_prop['Address'] = brownsville_prop['Address'].str.upper()\nnehemiah_p['Address'] = nehemiah_p['Address'].str.upper()\nspring_creek_adds['Address'] = spring_creek_adds['Address'].str.upper()\n\nspring_creek_adds['Address'] = spring_creek_adds['Address'].str.replace(\"-\",\"\")\n\n\n\nbrownsville_prop.head(n=10\n                     )\n\n\n\n\n\n\n\n\n\nAddress\nProject\nBorough\nState\nCounty\n\n\n\n\n0\n195 CHESTER\nNehemiah - Brownsville\nBrooklyn\nNY\nKings\n\n\n1\n175 LEGION\nNehemiah - Brownsville\nBrooklyn\nNY\nKings\n\n\n2\n787 HOWARD\nNehemiah - Brownsville\nBrooklyn\nNY\nKings\n\n\n3\n159 AMBOY\nNehemiah - Brownsville\nBrooklyn\nNY\nKings\n\n\n4\n161 AMBOY\nNehemiah - Brownsville\nBrooklyn\nNY\nKings\n\n\n5\n163 AMBOY\nNehemiah - Brownsville\nBrooklyn\nNY\nKings\n\n\n6\n165 AMBOY\nNehemiah - Brownsville\nBrooklyn\nNY\nKings\n\n\n7\n167 AMBOY\nNehemiah - Brownsville\nBrooklyn\nNY\nKings\n\n\n8\n169 AMBOY\nNehemiah - Brownsville\nBrooklyn\nNY\nKings\n\n\n9\n171 AMBOY\nNehemiah - Brownsville\nBrooklyn\nNY\nKings\n\n\n\n\n\n\n\n\n\ndef tb_change(s):\n    # Check if the pattern ' THOMAS BOYLAND' exists in the string\n    if ' THOMAS BOYLAND' in s:\n        # Replace the pattern with ' THOMAS S BOYLAND'\n        s = s.replace(' THOMAS BOYLAND', ' THOMAS S BOYLAND')\n    return s\n\n# Assuming brownsville_prop is your DataFrame\nbrownsville_prop['Address'] = brownsville_prop['Address'].apply(tb_change)\n\n\n# Create dictionary\nstreet_suffix = {\n    'LEGION': 'STREET',\n    'SARATOGA': 'AVENUE',\n    'SUTTER': 'AVENUE',\n    'STRAUSS': 'STREET',\n    'HOWARD': 'AVENUE',\n    'GRAFTON': 'STREET',\n    'DUMONT': 'AVENUE',\n    'BLAKE': 'AVENUE',\n    'HERZL': 'STREET',\n    'AMBOY': 'STREET',\n    'THOMAS S BOYLAND': 'ST',\n    'BRISTOL': 'STREET',\n    'CHESTER': 'STREET',\n    'ROCKAWAY': 'AVENUE',\n    'LIBERTY': 'AVENUE',\n    'CHRISTOPHER': 'AVENUE',\n    'WATKINS': 'STREET',\n    'MOTHER GASTON': 'BLVD',\n    'SACKMAN': 'STREET',\n    'NEWPORT': 'STREET',\n    'RIVERDALE': 'AVENUE',\n    'POWELL': 'STREET',\n    'JUNIUS': 'STREET',\n    'LOTT': 'AVENUE',\n    'NEW LOTS': 'AVENUE',\n    'WILLIAMS': 'AVENUE',\n    'PITKIN': 'AVENUE'\n}\n\ndef append_suffix(address):\n    # Compile regex patterns for each street name in the dictionary to identify them in the addresses\n    patterns = {re.compile(r'\\b' + re.escape(street) + r'\\b', re.IGNORECASE): suffix\n                for street, suffix in street_suffix.items()}\n\n    # Check each pattern to see if it matches a part of the address\n    for pattern, suffix in patterns.items():\n        if pattern.search(address):\n            # If a match is found, reconstruct the address with the suffix appended\n            match = pattern.search(address)\n            start, end = match.start(), match.end()\n            # Reconstruct the address with the suffix added\n            return address[:end] + ' ' + suffix + address[end:]\n    \n    # Return the original address if no matches are found\n    return address\n\n# Example usage on a DataFrame column\n# Assuming brownsville_prop is a DataFrame with an 'Address' column.\n# This will apply the function to each address in the DataFrame.\n\nbrownsville_prop['Address'] = brownsville_prop['Address'].apply(append_suffix)\n\n\n# Example usage on a single string, assuming this will be applied to a DataFrame column\n#example_address = '123 SARATOGA'\n#modified_address = append_suffix(example_address)\n#modified_address\n\n\nspring_creek_adds.head(n=20)\n\n\n\n\n\n\n\n\n\nProject\nPhase\nHouse #\nAddress\nBlock\nLot\nStatus\nParcel Identifier\n\n\n\n\n0\nNehemiah Spring Creek\n4B-1\n475\n475 VANDALIA AVENUE\n4452\n0290\nLeased\n3044520290\n\n\n1\nNehemiah Spring Creek\n4B-1\n479\n479 VANDALIA AVENUE\n4452\n0289\nLeased\n3044520289\n\n\n2\nNehemiah Spring Creek\n4B-1\n481\n481 VANDALIA AVENUE\n4452\n0288\nLeased\n3044520288\n\n\n3\nNehemiah Spring Creek\n4B-1\n483\n483 VANDALIA AVENUE\n4452\n0287\nLeased\n3044520287\n\n\n4\nNehemiah Spring Creek\n4B-1\n485\n485 VANDALIA AVENUE\n4452\n0286\nLeased\n3044520286\n\n\n5\nNehemiah Spring Creek\n4B-1\n487\n487 VANDALIA AVENUE\n4452\n0285\nLeased\n3044520285\n\n\n6\nNehemiah Spring Creek\n4B-1\n489\n489 VANDALIA AVENUE\n4452\n0284\nLeased\n3044520284\n\n\n7\nNehemiah Spring Creek\n4B-1\n491\n491 VANDALIA AVENUE\n4452\n0283\nLeased\n3044520283\n\n\n8\nNehemiah Spring Creek\n4B-1\n493\n493 VANDALIA AVENUE\n4452\n0282\nLeased\n3044520282\n\n\n9\nNehemiah Spring Creek\n4B-1\n495\n495 VANDALIA AVENUE\n4452\n0281\nLeased\n3044520281\n\n\n10\nNehemiah Spring Creek\n4B-1\n497\n497 VANDALIA AVENUE\n4452\n0280\nLeased\n3044520280\n\n\n11\nNehemiah Spring Creek\n4B-1\n494\n494 VANDALIA AVENUE\n4452\n0441\nLeased\n3044520441\n\n\n12\nNehemiah Spring Creek\n4B-1\n496\n496 VANDALIA AVENUE\n4452\n0442\nLeased\n3044520442\n\n\n13\nNehemiah Spring Creek\n4B-1\n498\n498 VANDALIA AVENUE\n4452\n0443\nLeased\n3044520443\n\n\n14\nNehemiah Spring Creek\n4B-1\n500\n500 VANDALIA AVENUE\n4452\n0444\nLeased\n3044520444\n\n\n15\nNehemiah Spring Creek\n4B-1\n502\n502 VANDALIA AVENUE\n4452\n0445\nLeased\n3044520445\n\n\n16\nNehemiah Spring Creek\n4B-1\n504\n504 VANDALIA AVENUE\n4452\n0446\nLeased\n3044520446\n\n\n17\nNehemiah Spring Creek\n4B-1\n506\n506 VANDALIA AVENUE\n4452\n0447\nLeased\n3044520447\n\n\n18\nNehemiah Spring Creek\n4B-1\n508\n508 VANDALIA AVENUE\n4452\n0448\nLeased\n3044520448\n\n\n19\nNehemiah Spring Creek\n4B-1\n510\n510 VANDALIA AVENUE\n4452\n0449\nLeased\n3044520449\n\n\n\n\n\n\n\n\n\nnehemiah_p.head(n=10)\n\n\n\n\n\n\n\n\n\nProject\nAddress\nParcel Identifier\n# of Units\nYear Developed\nDevelopment Phase\nBorough\nState\nCounty\n\n\n\n\n0\nNehemiah - East New York\n94 BENTLEY AVENUE\nNO RESULTS FOUND\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\n\n\n1\nNehemiah - East New York\n577 ESSEX STREET\n4040680017\n1.0\n1989.0\nSold\nBrooklyn\nNY\nKings\n\n\n2\nNehemiah - East New York\n4323 CLARENDON ROAD.\n3049430014\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\n\n\n3\nNehemiah - Spring Creek\n912 ERSKINE STREET\n3045860977\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\n\n\n4\nNehemiah - Spring Creek\n910 ERSKINE STREET\n3045860976\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\n\n\n5\nNehemiah - Spring Creek\n908 ERSKINE STREET\n3045860975\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\n\n\n6\nNehemiah - Spring Creek\n906 ERSKINE STREET\n3045860974\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\n\n\n7\nNehemiah - Spring Creek\n904 ERSKINE STREET\n3045860973\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\n\n\n8\nNehemiah - Spring Creek\n902 ERSKINE STREET\n3045860972\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\n\n\n9\nNehemiah - Spring Creek\n900 ERSKINE STREET\n3045860971\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\n\n\n\n\n\n\n\n\n\n# Merge them in a way that it stacks them all, keeps project, address, and phase\nall_np = pd.concat([nehemiah_p, brownsville_prop, spring_creek_adds], axis=0, ignore_index=True)\nall_np.info()\nall_np.tail(n=5)\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 3344 entries, 0 to 3343\nData columns (total 14 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   Project            3344 non-null   object \n 1   Address            3344 non-null   object \n 2   Parcel Identifier  1887 non-null   object \n 3   # of Units         1201 non-null   float64\n 4   Year Developed     1173 non-null   float64\n 5   Development Phase  2195 non-null   object \n 6   Borough            3273 non-null   object \n 7   State              3273 non-null   object \n 8   County             3273 non-null   object \n 9   Phase              71 non-null     object \n 10  House #            71 non-null     float64\n 11  Block              71 non-null     object \n 12  Lot                71 non-null     object \n 13  Status             71 non-null     object \ndtypes: float64(3), object(11)\nmemory usage: 365.9+ KB\n\n\n\n\n\n\n\n\n\n\nProject\nAddress\nParcel Identifier\n# of Units\nYear Developed\nDevelopment Phase\nBorough\nState\nCounty\nPhase\nHouse #\nBlock\nLot\nStatus\n\n\n\n\n3339\nNehemiah Spring Creek\n71 GATEWAY DRIVE\n3044520237\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n4C\n71.0\n4452\n0237\nIn Construction\n\n\n3340\nNehemiah Spring Creek\n414 VANDALIA AVENUE\n3044520249\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n4C\n414.0\n4452\n0249\nIn Construction\n\n\n3341\nNehemiah Spring Creek\n416 VANDALIA AVENUE\n3044520250\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n4C\n416.0\n4452\n0250\nIn Construction\n\n\n3342\nNehemiah Spring Creek\n418 VANDALIA AVENUE\n3044520251\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n4C\n418.0\n4452\n0251\nIn Construction\n\n\n3343\nNehemiah Spring Creek\n422 VANDALIA AVENUE\n3044520252\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n4C\n422.0\n4452\n0252\nIn Construction\n\n\n\n\n\n\n\n\n\n#looking at combined list\ncounts = all_np['Project'].value_counts()\nprint(len(all_np))\nprint(counts)\n\n3344\nNehemiah - Brownsville      1079\nNehemiah - East New York    1050\nNehemiah - New Lots          690\nNehemiah - Spring Creek      452\nNehemiah Spring Creek         71\nNehemiah - South Bronx         2\nName: Project, dtype: int64\n\n\n\n#more treatment\n\ndef treatment_two(s):\n    # Remove the periods after 'STREET', 'AVENUE', or 'BOULEVARD'\n    def remove_period(s):\n        # Define a pattern to match 'STREET.', 'AVENUE.', or 'BOULEVARD.' at the end of the string\n            pattern = r'(STREET|AVENUE|BOULEVARD)\\.$'\n\n        # Use regex to find matches\n            match = re.search(pattern, s)\n\n        # If a match is found, remove the period\n            if match:\n            # Replace the match with the group before the period (group 1) without the period\n                s = s[:match.start(1) + len(match.group(1))]  # Keep everything before the group plus the group itself\n    return s\n\n    # Remove leading zeros\n    def remove_leading_zeros_and_dash(s):\n        # Use regex to remove leading zeros and dash from the string\n        return re.sub(r'^(0+-)?\\s*(\\d+\\s*-\\s*)?', '', s)\n\n    # Apply each function in sequence\n    s = remove_leading_zeros_and_dash(s)\n    s = remove_period(s)\n\n    return s\n\nall_np['Address'] = all_np['Address'].apply(treatment_two)\nall_np['Address'] = all_np['Address'].str.replace('^0+', '')  # Remove leading zeros\nall_np['Address'] = all_np['Address'].str.replace('-', '')  # Remove hyphens\n\nC:\\Users\\Gabriel\\AppData\\Local\\Temp\\ipykernel_28236\\4081018278.py:30: FutureWarning: The default value of regex will change from True to False in a future version.\n  all_np['Address'] = all_np['Address'].str.replace('^0+', '')  # Remove leading zeros\n\n\n\n# Convert the 'Address' column to a common data type in both datasets\nall_np['Address'] = all_np['Address'].astype(str)\nnyc_mappluto['Address'] = nyc_mappluto['Address'].astype(str)\n\n# Perform the merge based on the 'Address' column\nnehemiah_mappluto = all_np.merge(nyc_mappluto, how='left', on='Address')\nnehemiah_mappluto= gpd.GeoDataFrame(nehemiah_mappluto, geometry='geometry')\nnehemiah_mappluto.info()\n\n&lt;class 'geopandas.geodataframe.GeoDataFrame'&gt;\nInt64Index: 3368 entries, 0 to 3367\nColumns: 110 entries, Project to Parcel_Identifier\ndtypes: float64(50), geometry(1), object(59)\nmemory usage: 2.9+ MB\n\n\n\n\npID_merge =all_np.merge(nyc_mappluto, how='inner', left_on='Parcel Identifier', right_on='Parcel_Identifier')\n\npID_merge.head(n=10)\n\nnhmappluto = nehemiah_mappluto.append(pID_merge, ignore_index=True)\n\nC:\\Users\\Gabriel\\AppData\\Local\\Temp\\ipykernel_28236\\474204601.py:5: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n  nhmappluto = nehemiah_mappluto.append(pID_merge, ignore_index=True)\n\n\n\n#total count of properties on the combined list\nprint(len(nehemiah_mappluto))\n\n3368\n\n\n\n#a geodataframe that uses the indicator geometry to note what in the nehemiah list did not merge with mappluto\nnehemiah_mappluto_2 = nhmappluto[nhmappluto['geometry'].isnull()]\nprint(len(nehemiah_mappluto_2))\n\nnehemiah_mappluto_2.head(n=81)\n\n60\n\n\n\n\n\n\n\n\n\n\nProject\nAddress\nParcel Identifier_x\n# of Units\nYear Developed\nDevelopment Phase\nBorough_x\nState\nCounty\nPhase\nHouse #\nBlock_x\nLot_x\nStatus\nBorough_y\nBlock_y\nLot_y\nCD\nBCT2020\nBCTCB2020\nCT2010\nCB2010\nSchoolDist\nCouncil\nZipCode\nFireComp\nPolicePrct\nHealthCent\nHealthArea\nSanitboro\nSanitDistr\nSanitSub\nZoneDist1\nZoneDist2\nZoneDist3\nZoneDist4\nOverlay1\nOverlay2\nSPDist1\nSPDist2\nSPDist3\nLtdHeight\nSplitZone\nBldgClass\nLandUse\nEasements\nOwnerType\nOwnerName\nLotArea\nBldgArea\nComArea\nResArea\nOfficeArea\nRetailArea\nGarageArea\nStrgeArea\nFactryArea\nOtherArea\nAreaSource\nNumBldgs\nNumFloors\nUnitsRes\nUnitsTotal\nLotFront\nLotDepth\nBldgFront\nBldgDepth\nExt\nProxCode\nIrrLotCode\nLotType\nBsmtCode\nAssessLand\nAssessTot\nExemptTot\nYearBuilt\nYearAlter1\nYearAlter2\nHistDist\nLandmark\nBuiltFAR\nResidFAR\nCommFAR\nFacilFAR\nBoroCode\nBBL\nCondoNo\nTract2010\nXCoord\nYCoord\nZoneMap\nZMCode\nSanborn\nTaxMap\nEDesigNum\nAPPBBL\nAPPDate\nPLUTOMapID\nFIRM07_FLA\nPFIRM15_FL\nVersion\nDCPEdited\nLatitude\nLongitude\nNotes\nShape_Leng\nShape_Area\ngeometry\nParcel Identifier_y\nParcel_Identifier\nAddress_x\nAddress_y\n\n\n\n\n0\nNehemiah - East New York\n94 BENTLEY AVENUE\nNO RESULTS FOUND\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n2\nNehemiah - East New York\n4323 CLARENDON ROAD.\n3049430014\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n418\nNehemiah - Spring Creek\n12498 FLATLANDS AVENUE\n3044500132\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n419\nNehemiah - Spring Creek\n12496 FLATLANDS AVENUE\n3044500131\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n420\nNehemiah - Spring Creek\n12494 FLATLANDS AVENUE\n3044500130\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n421\nNehemiah - Spring Creek\n12492 FLATLANDS AVENUE\n3044500129\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n422\nNehemiah - Spring Creek\n12490 FLATLANDS AVENUE\n3044500128\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n423\nNehemiah - Spring Creek\n12488 FLATLANDS AVENUE\n3044500127\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n424\nNehemiah - Spring Creek\n12486 FLATLANDS AVENUE\n3044500126\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n425\nNehemiah - Spring Creek\n12484 FLATLANDS AVENUE\n3044500125\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n426\nNehemiah - Spring Creek\n12482 FLATLANDS AVENUE\n3044500124\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n427\nNehemiah - Spring Creek\n12480 FLATLANDS AVENUE\n3044500123\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n456\nNehemiah - New Lots\n1819 LINDEN BOULEVARD.\n3043180109\n1.0\n2001.0\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n1013\nNehemiah - East New York\n469 ASFORD STREET\n3040480019\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n1058\nNehemiah - East New York\n474 ASFORD STREET\n3040470063\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n1297\nNehemiah - East New York\n215 BERRIMAN STREET.\n3040220005\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n1298\nNehemiah - East New York\n217 BERRIMAN STREET.\n3040220004\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n1623\nNehemiah - East New York\n386 BRADFORD STREET.\n3037750132\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n1661\nNehemiah - East New York\n414 WYONA STREET.\n3037740145\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n1668\nNehemiah - East New York\n441 VERMONT STREET.\n3037740110\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n1695\nNehemiah - East New York\n418 VERMONT STREET.\n3037730134\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n1759\nNehemiah - East New York\n381 VERMONT STREET.\n3037570065\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n1766\nNehemiah - East New York\n395 VERMONT STREET.\n3037570051\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n1770\nNehemiah - East New York\n403 VERMONT STREET.\n3037570001\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n1814\nNehemiah - South Bronx\n694 STREET. MARY STREET\n3035720057\n2.0\n1999.0\nSold\nBronx\nNY\nBronx\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n1816\nNehemiah - Spring Creek\n\nNaN\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n1829\nNehemiah - New Lots\n1835 LINDEN BOULEVARD.\nNaN\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n1850\nNehemiah - New Lots\n37 MALTA AVENUE\nNaN\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n1866\nNehemiah - New Lots\n1813 LINDEN BOULEVARD.\nNaN\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n1879\nNehemiah - New Lots\n1763 LINDEN BOULEVARD.\nNaN\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n1907\nNehemiah - New Lots\n538 SHEFFIELD STREET\nNaN\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n1909\nNehemiah - New Lots\n456 SHEFFIELD AVENUE\nNaN\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n1926\nNehemiah - New Lots\n1823 LINDEN BOULEVARD.\nNaN\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n1932\nNehemiah - New Lots\n1831 LINDEN BOULEVARD.\nNaN\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n1942\nNehemiah - New Lots\n1829 LINDEN BOULEVARD.\nNaN\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n1957\nNehemiah - New Lots\n399 HINSDALE STEET\nNaN\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n1965\nNehemiah - New Lots\n1807 LINDEN BOULEVARD.\nNaN\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n1983\nNehemiah - New Lots\n1805 LINDEN BOULEVARD.\nNaN\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n2017\nNehemiah - New Lots\n674 WILILAMS AVENUE\nNaN\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n2047\nNehemiah - New Lots\n1835 A LINDEN BOULEVARD.\nNaN\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n2052\nNehemiah - New Lots\n1811 LINDEN BOULEVARD.\nNaN\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n2063\nNehemiah - New Lots\n439 NEWPORT STREET\nNaN\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n2104\nNehemiah - New Lots\n1817 LINDEN BOULEVARD.\nNaN\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n2105\nNehemiah - New Lots\n663 ALABAMA AVEENUE\nNaN\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n2106\nNehemiah - New Lots\n1825 LINDEN BOULEVARD.\nNaN\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n2143\nNehemiah - New Lots\n592 ALABAMA AVENUE\nNaN\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n2153\nNehemiah - New Lots\n442 HEGEMAN AVENUE\nNaN\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n2169\nNehemiah - New Lots\n1761 LINDEN BOULEVARD.\nNaN\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n2191\nNehemiah - New Lots\n1767 LINDEN BOULEVARD.\nNaN\nNaN\nNaN\nSold\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n2197\nNehemiah - Brownsville\n175 LEGION STREET\nNaN\nNaN\nNaN\nNaN\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n2394\nNehemiah - Brownsville\n524 CHRISTOPHER AVENUE\nNaN\nNaN\nNaN\nNaN\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n2712\nNehemiah - Brownsville\n855 MOTHER GASTON BLVD\nNaN\nNaN\nNaN\nNaN\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n3205\nNehemiah - Brownsville\n574 THOMAS S BOYLAND ST\nNaN\nNaN\nNaN\nNaN\nBrooklyn\nNY\nKings\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n3349\nNehemiah Spring Creek\n406 VANDALIA AVENUE\n3044520204\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n4C\n406.0\n4452\n0204\nIn Construction\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n3350\nNehemiah Spring Creek\n408 VANDALIA AVENUE\n3044520205\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n4C\n408.0\n4452\n0205\nIn Construction\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n3351\nNehemiah Spring Creek\n410 VANDALIA AVENUE\n3044520206\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n4C\n410.0\n4452\n0206\nIn Construction\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n3352\nNehemiah Spring Creek\n412 VANDALIA AVENUE\n3044520207\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n4C\n412.0\n4452\n0207\nIn Construction\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n3353\nNehemiah Spring Creek\n95 GATEWAY DRIVE\n3044520226\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n4C\n95.0\n4452\n0226\nIn Construction\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n3364\nNehemiah Spring Creek\n414 VANDALIA AVENUE\n3044520249\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n4C\n414.0\n4452\n0249\nIn Construction\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n3365\nNehemiah Spring Creek\n416 VANDALIA AVENUE\n3044520250\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n4C\n416.0\n4452\n0250\nIn Construction\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n\n\n\n\n\n#it keeps the rows still so when we drop the geometry we lose 1180 rows from the object, resulting in 2583 rows\n#of the remaining, some merged on the address, but the lot is in another borough. PArcel identifier is more attractive\n\n\n#NA Values cannot be in geometry for folium to work\n# drops geometry NA to put folium-ready object\nnhmappluto = nhmappluto.dropna(subset=['geometry'])\nprint(len(nhmappluto))\n\n5153\n\n\n\n#the purpose of this is to remove duplicate addresses in other borouhs that were showing up??? \n#Sort the DataFrame so that 'BK' values in 'Borough' come first for each 'Address' - this impacts the 'keep' argument in the drop duplicates section \nnhmappluto_sorted = nhmappluto.sort_values(by=['Address', 'Borough_x'], ascending=[True, False])\n\n# Mark all duplicates as True, including the first occurrence\nmarks = nhmappluto_sorted.duplicated(subset='Address', keep=False)\n\n# Filter the original DataFrame to only include rows that are marked as duplicates\nall_duplicates = nhmappluto_sorted[marks]\n\nprint(len(all_duplicates))\n#there are 16\n\n1911\n\n\n\n# Drop duplicates based on the 'Address' column, keeping the first occurrence (Brooklyn)\n#this is based on previous work with NYCMapplutoData \n\nnhmappluto = nhmappluto_sorted.drop_duplicates(subset='Address', keep='first')\nprint(len(nhmappluto))\n\n3276\n\n\n\n#Interactive Map\n#040224 - 2156 parcels\n#041224 - 3276 parcels\nnhmappluto.explore()\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\n\n# Specify the output directory where you want to save the shapefile\noutput_directory = r'C:\\Users\\Gabriel\\Desktop\\PYTHON FINAL\\data\\Final Map'\n\n# Create the output directory if it doesn't exist\nos.makedirs(output_directory, exist_ok=True)\n\n# Specify the output shapefile path\noutput_shapefile = os.path.join(output_directory, 'nhmappluto.shp')\n\n# Save the GeoPandas DataFrame as a shapefile\nnhmappluto.to_file(output_shapefile)\n\nC:\\Users\\Gabriel\\AppData\\Local\\Temp\\ipykernel_28236\\3354178473.py:11: UserWarning: Column names longer than 10 characters will be truncated when saved to ESRI Shapefile.\n  nhmappluto.to_file(output_shapefile)",
    "crumbs": [
      "Analysis",
      "Project"
    ]
  }
]